name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: withus-app
  CONTAINER_REGISTRY: ghcr.io  # GitHub Container Registry
  CONTAINER_IMAGE: ghcr.io/raisjoelbeya/withus:latest

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2-
        
    - name: Build and test with Maven
      run: mvn -B clean test
      
    - name: Build JAR
      run: mvn -B clean package -DskipTests
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.CONTAINER_IMAGE }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1
        
    # Ajoutez ici les étapes de déploiement si nécessaire
    # Par exemple, déploiement sur un serveur ou un service cloud
    
    - name: Show success message
      run: |
        echo "CI/CD pipeline exécutée avec succès!"
        echo "Image Docker disponible sur: ${{ env.CONTAINER_IMAGE }}"
